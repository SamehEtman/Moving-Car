from OpenGL.GL import *
from OpenGL.GLU import *
from OpenGL.GLUT import *
from math import *
import numpy as np

def myInit():
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    gluPerspective(60,1,1,30)
    gluLookAt(8,9,10,
              0,0,0,
              0,1,0)
    glClearColor(1,1,1,1)
    glClear(GL_COLOR_BUFFER_BIT)

def drawXZShape(w , l , xc , yc , zc,c):
    #The Body
    glBegin(GL_POLYGON)
    glColor3f(c , c , c)
    glVertex(xc - w / 2, yc  ,zc + l / 2)
    glVertex(xc - w / 2 + w, yc,zc + l / 2)
    glVertex(xc - w / 2 + w, yc ,zc+ l / 2 - l)
    glVertex(xc - w / 2, yc ,zc+ l / 2 - l)
    glEnd()
def drawXYShape(w , l , xc , yc , zc,c):
    #The Body
    glBegin(GL_POLYGON)
    glColor3f(c , c , c)
    glVertex(xc - w / 2, yc + l / 2,zc)
    glVertex(xc - w / 2 + w, yc + l / 2,zc)
    glVertex(xc - w / 2 + w, yc+ l / 2 - l,zc)
    glVertex(xc - w / 2, yc+ l / 2 - l,zc )
    glEnd()

def drawYZShape(w , l , xc , yc , zc,c):
    #The Body
    glBegin(GL_POLYGON)
    glColor3f(c , c , c)
    glVertex(xc , yc- w / 2 ,zc + l / 2)
    glVertex(xc , yc- w / 2 + w,zc + l / 2)
    glVertex(xc, yc  - w / 2 + w,zc+ l / 2 - l)
    glVertex(xc , yc- w / 2 ,zc+ l / 2 - l)
    glEnd()

def drawPolyCube(w,c):

    drawXZShape(w, w, w/2, 2, w/2,c)
    drawXYShape(w, w, w/2, w/2, 2,c)


def drawRoad():
    glBegin(GL_POLYGON)
    glColor3f(.5,.5,.5)
    glVertex(-20,0,3.5)
    glVertex(-30, 0, -2.8)
    glVertex(20, 0, -2.8)
    glVertex(20, 0, 3.5)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(-30, 0, 0)
    glVertex(-30, 0, 1)
    glVertex(-18, 0, 1)
    glVertex(-18, 0, 0)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(-10, 0, 0)
    glVertex(-10, 0, 1)
    glVertex(-2, 0, 1)
    glVertex(-2, 0, 0)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(2, 0, 0)
    glVertex(2, 0, 1)
    glVertex(8, 0, 1)
    glVertex(8, 0, 0)
    glEnd()



def drawSideL(rr=1):
    c= 0
    for i in range (-9 , 9,4):
        glScale(1.5, .7, .9)
        glTranslate(i, 0, 5)
        drawPolyCube(2,0)
        glLoadIdentity()
        c+=1

    glLoadIdentity()

    glScale(1.5, .7, .9)
    glBegin(GL_LINES)
    glColor3f(0, 0, 0)
    glVertex(-10, 2, 7)
    glVertex(10, 2, 7)
    glVertex(-10, 2, 5)
    glVertex(10, 2, 5)
    glEnd()
    glBegin(GL_POLYGON)
    glColor3f(.69, 0.57, 0.05)
    glVertex(-10, 2, 7)
    glVertex(-10, 2, 20)
    glVertex(10, 2, 20)
    glVertex(10, 2, 7)
    glEnd()
    glLoadIdentity()




def drawSideR():
    c = 0
    for i in range(-18, 9, 4):
        glScale(1.5, .7, .9)
        glTranslate(i, 0, -5)
        drawPolyCube(2, 0)
        glLoadIdentity()
        c += 1

    glLoadIdentity()

    glScale(1.5, .7, .9)
    glBegin(GL_LINES)
    glColor3f(0, 0, 0)
    glVertex(-25, 2, -3)
    glVertex(18, 2, -3)
    glVertex(-25, 0, -3)
    glVertex(18, 0, -3)
    glVertex(-25, 2, -5)
    glVertex(18, 2, -5)
    glEnd()
    glBegin(GL_POLYGON)
    glColor3f(.69, 0.57, 0.05)
    glVertex(-19, 2, -5)
    glVertex(-18, 20, 20)
    glVertex(20, 20, 15)
    glVertex(20, 2, -5)

    glEnd()
    glLoadIdentity()
def drawTreeR(i):

    glLoadIdentity()
    glColor3f(0.6, 0.3, 0)
    glTranslate(-i,2,-9)
    glScale(0.08,0.7,0.08)
    glutSolidCube(4.6)

    glLoadIdentity()
    glColor3f(0.2, 0.6, 0)
    glTranslate(-i , 2.2, -9)
    glutSolidSphere(1.5, 10, 10)

def drawTreeL(i):

    glLoadIdentity()
    glColor3f(0.6, 0.3, 0)
    glTranslate(-i,2,9)
    glScale(0.08,0.7,0.08)
    glutSolidCube(2)

    glLoadIdentity()
    glColor3f(0.2, 0.6, 0)
    glTranslate(-i , 2.2, 9)
    glutSolidSphere(1.5, 10, 10)
def xyz():
    glBegin(GL_LINES)
    glVertex(0, 0, 0)
    glVertex(0, 10, 0)
    glVertex(0, 0, 0)
    glVertex(10, 0, 0)
    glVertex(0, 0, 0)
    glVertex(0, 0, 10)
    glEnd()

angle = 0
trans = 0
f = 1

def draw():
    global angle
    global trans
    global f
    glMatrixMode(GL_MODELVIEW)

    glClear(GL_COLOR_BUFFER_BIT)
    drawRoad()
    drawSideL()
    drawSideR()
    drawTreeR(5)
    drawTreeR(18)
    drawTreeR(-5)
    drawTreeL(-3)
    glLoadIdentity()
    glColor3f(0,0,0)

    glTranslate(-5 * 0.5, -5 * .25 * .5, 5 * .5 * .5)
    glTranslate(trans,0,0)

    glRotate(angle,0,0,1)

    glutWireTorus(.125, .5, 12, 10)
    glTranslate(trans,0,0)

    glLoadIdentity()

    glTranslate(-5 * 0.5, -5 * .25 * .5,- 5 * .5 * .5)
    glTranslate(trans,0,0)

    glRotate(angle,0,0,1)

    glutWireTorus(.125, .5, 12, 10)
    glTranslate(trans,0,0)

    glLoadIdentity()

    glTranslate(5 * 0.5, -5 * .25 * .5,- 5 * .5 * .5)
    glTranslate(trans,0,0)

    glRotate(angle,0,0,1)

    glutWireTorus(.125, .5, 12, 10)
    glLoadIdentity()


    glColor3f(.3, .6, 0)
    glScale(1,.25,.5)
    glTranslate(trans,0,0)
    glutSolidCube(5)
    glLoadIdentity()
    glColor3f(.4, .8, 0)

    glScale(.5, .25, .5)
    glTranslate(trans*2,0,0)
    glTranslate(0,5,0)
    glutSolidCube(5)

    glColor3f(1, 0.98, 0.517)
    glLoadIdentity()
    glBegin(GL_POLYGON)
    glVertex(trans + 1.28, 0.75, 1.3)
    glVertex(trans + 1.28, 0.75, -1.2)
    glVertex(trans + 1.28, 1.6, -1.2)
    glVertex(trans + 1.28, 1.6, 1.3)
    glEnd()

    glColor3f(0,0,0)
    glLoadIdentity()
    glTranslate(5*0.5,-5*.25*.5, 5*.5*.5)
    glTranslate(trans,0,0)
    glRotate(angle,0,0,1)

    glutWireTorus(.125,.5,12,10)
    glLoadIdentity()

    if trans >10 or trans <-10:
        f *=-1
    trans+=f*.005
    angle-=f*.1
    glutSwapBuffers()



glutInit()
glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
glutInitWindowSize(500, 500)
glutCreateWindow(b"Lab3 - Car")
myInit()
glutDisplayFunc(draw)
glutIdleFunc(draw)
glutMainLoop()
